#!/usr/bin/env python
import sys
import argparse
import operator
from rec.time_and_patterns import Find_Time_And_Patterns

if __name__ == '__main__':
    if not sys.stdin.isatty():
        f = sys.stdin
        min = 0
        max = 100
        count = 1000000
        if '-c' in sys.argv or '--count' in sys.argv:
            try:count = int(sys.argv[sys.argv.index('-c') + 1])
            except:pass
            try:count = int(sys.argv[sys.argv.index('--count') +1])
            except:pass
        if '--min' in sys.argv:
            try:min = int(sys.argv[sys.argv.index('--min') + 1])
            except:pass
        if '--max' in sys.argv:
            try:max = int(sys.argv[sys.argv.index('--max') + 1])
            except:pass
    else:
        parse = argparse.ArgumentParser()
        parse.add_argument('file', help="password file")
        parse.add_argument('-c', '--count', default=1000000, help="# of items to print")
        parse.add_argument('--min', default=0, help="min length of pattern")
        parse.add_argument('--max', default=100, help="max length of pattern")
        args = parse.parse_args()
        f = open(args.file, 'r')
        min = int(args.min)
        max = int(args.max)
        count = int(args.count)
    gp = Find_Time_And_Patterns(int(min) * 2, int(max) * 2)
    gp.parse_list(f)
    gp.print_data(int(count))
